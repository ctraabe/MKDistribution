(export (version D)
  (design
    (source /home/ctraabe/KiCad/Mikrokopter/Distribution/Distribution.sch)
    (date "Sat 15 Oct 2016 09:06:16 PM JST")
    (tool "Eeschema 4.0.2+dfsg1-stable")
    (sheet (number 1) (name /) (tstamps /)
      (title_block
        (title)
        (company)
        (rev)
        (date)
        (source Distribution.sch)
        (comment (number 1) (value ""))
        (comment (number 2) (value ""))
        (comment (number 3) (value ""))
        (comment (number 4) (value "")))))
  (components
    (comp (ref SP1)
      (value SPEAKER)
      (footprint Pin_Headers:Pin_Header_Straight_1x02)
      (libsource (lib device) (part SPEAKER))
      (sheetpath (names /) (tstamps /))
      (tstamp 56EFFF3F))
    (comp (ref MC1)
      (value MotorCtrl)
      (footprint Connectors_Molex:Molex_PicoBlade_53047-0510)
      (libsource (lib mikrokopter) (part MotorCtrl))
      (sheetpath (names /) (tstamps /))
      (tstamp 56F00083))
    (comp (ref BT1)
      (value Battery)
      (footprint Pin_Headers:Pin_Header_Straight_1x02)
      (libsource (lib device) (part Battery))
      (sheetpath (names /) (tstamps /))
      (tstamp 5747A1BA))
    (comp (ref C1)
      (value I2C)
      (footprint Pin_Headers:Pin_Header_Straight_2x06)
      (libsource (lib distribution) (part I2C))
      (sheetpath (names /) (tstamps /))
      (tstamp 58021B50)))
  (libparts
    (libpart (lib device) (part Battery)
      (fields
        (field (name Reference) BT)
        (field (name Value) Battery))
      (pins
        (pin (num 1) (name ~) (type passive))
        (pin (num 2) (name ~) (type passive))))
    (libpart (lib distribution) (part I2C)
      (fields
        (field (name Reference) C)
        (field (name Value) I2C))
      (pins
        (pin (num 1) (name SDA1) (type output))
        (pin (num 2) (name SCL1) (type output))
        (pin (num 3) (name SDA2) (type output))
        (pin (num 4) (name SCL2) (type output))
        (pin (num 5) (name SDA3) (type output))
        (pin (num 6) (name SCL3) (type output))
        (pin (num 7) (name SDA4) (type output))
        (pin (num 8) (name SCL4) (type output))
        (pin (num 9) (name SDA5) (type output))
        (pin (num 10) (name SCL5) (type output))
        (pin (num 11) (name SDA6) (type output))
        (pin (num 12) (name SCL6) (type output))))
    (libpart (lib mikrokopter) (part MotorCtrl)
      (fields
        (field (name Reference) MC)
        (field (name Value) MotorCtrl))
      (pins
        (pin (num 1) (name GND) (type output))
        (pin (num 2) (name BUZZER) (type output))
        (pin (num 3) (name SDA) (type BiDi))
        (pin (num 4) (name SCL) (type output))
        (pin (num 5) (name VBAT) (type input))))
    (libpart (lib device) (part SPEAKER)
      (fields
        (field (name Reference) SP)
        (field (name Value) SPEAKER))
      (pins
        (pin (num 1) (name 1) (type input))
        (pin (num 2) (name 2) (type input)))))
  (libraries
    (library (logical device)
      (uri /usr/share/kicad/library/device.lib))
    (library (logical mikrokopter)
      (uri /home/ctraabe/KiCad/Mikrokopter/mikrokopter.lib))
    (library (logical distribution)
      (uri /home/ctraabe/KiCad/Mikrokopter/Distribution/distribution.lib)))
  (nets
    (net (code 1) (name "Net-(MC1-Pad2)")
      (node (ref SP1) (pin 2))
      (node (ref MC1) (pin 2)))
    (net (code 2) (name "Net-(C1-Pad1)")
      (node (ref MC1) (pin 3))
      (node (ref C1) (pin 3))
      (node (ref C1) (pin 11))
      (node (ref C1) (pin 9))
      (node (ref C1) (pin 1))
      (node (ref C1) (pin 7))
      (node (ref C1) (pin 5)))
    (net (code 3) (name "Net-(C1-Pad10)")
      (node (ref C1) (pin 4))
      (node (ref MC1) (pin 4))
      (node (ref C1) (pin 2))
      (node (ref C1) (pin 10))
      (node (ref C1) (pin 6))
      (node (ref C1) (pin 8))
      (node (ref C1) (pin 12)))
    (net (code 4) (name +BATT)
      (node (ref MC1) (pin 5))
      (node (ref BT1) (pin 1)))
    (net (code 5) (name GND)
      (node (ref MC1) (pin 1))
      (node (ref BT1) (pin 2))
      (node (ref SP1) (pin 1)))))